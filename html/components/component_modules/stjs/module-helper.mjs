let Helper={is_template:e=>new Promise(async function(t,n){t(/\{\{(.+)\}\}/g.test(e))}),is_array:e=>new Promise(async function(t,n){t(Array.isArray(e)||!!e&&"object"==typeof e&&"number"==typeof e.length&&(0===e.length||e.length>0&&e.length-1 in e))})};Helper.resolve=((e,t,n)=>new Promise(async function(r,l){let i=e=>{r(e)};try{if(t&&t.length>0){i(Function("new_val","with(this) {this"+t+"=new_val; return this;}").bind(e)(n))}else i(e=n)}catch(e){o={_:"Helper.resolve",error:e},console.log("~~~ err ~~~",o),l(o)}var o}));export default Helper;