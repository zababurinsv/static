import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty.mjs";import colorlog from"/static/html/components/component_modules/colorLog/colorLog.mjs";let root,object={},SELECT={$progress:!1,$selected:!1},Conditional={},Helper={},TRANSFORM={};Helper.is_template=(e=>new Promise(async function(t,o){t(/\{\{(.+)\}\}/g.test(e))})),SELECT.exec=((e,t,o)=>new Promise(async function(r,i){try{if("string"==typeof e);else if(await Helper.is_array(e))for(let r=0;r<e.length;r++)await SELECT.exec(e[r],t+"["+r+"]",o);else for(let r in e)if("$root"!==r){if(o(r,e[r])){let o=SELECT.$selected.length;SELECT.$selected.push({index:o,key:r,path:t,object:e,value:e[r]})}await SELECT.exec(e[r],t+'["'+r+'"]',o)}}catch(e){n={_:"exec",error:e},console.log("~~~ err ~~~",n),i(n)}var n})),SELECT.objects=((e={_:"SELECT",SELECT:void 0})=>new Promise(async function(t,o){isEmpty(e.SELECT)||(SELECT=e.SELECT),SELECT.$progress=null,SELECT.$selected?t(SELECT.$selected.map(function(e){return e.object})):t([SELECT.$selected_root])})),SELECT.keys=((e={_:"SELECT",SELECT:void 0})=>new Promise(async function(t,o){isEmpty(e.SELECT)||(SELECT=e.SELECT),SELECT.$progress=null,SELECT.$selected?t(SELECT.$selected.map(function(e){return e.key})):Array.isArray(SELECT.$selected_root)?t(Object.keys(SELECT.$selected_root).map(function(e){return parseInt(e)})):t(Object.keys(SELECT.$selected_root))})),SELECT.paths=((e={_:"SELECT",SELECT:void 0})=>new Promise(async function(t,o){isEmpty(e.SELECT)||(SELECT=e.SELECT),SELECT.$progress=null,SELECT.$selected?t(SELECT.$selected.map(function(e){return e.path})):Array.isArray(SELECT.$selected_root)?t(Object.keys(SELECT.$selected_root).map(function(e){return"["+e+"]"})):t(Object.keys(SELECT.$selected_root).map(function(e){return'["'+e+'"]'}))})),SELECT.values=((e={_:"SELECT",SELECT:void 0})=>new Promise(async function(t,o){isEmpty(e.SELECT)||(SELECT=e.SELECT),SELECT.$progress=null,SELECT.$selected?t(SELECT.$selected.map(function(e){return e.value})):t(Object.values(SELECT.$selected_root))})),SELECT.root=((e={_:"SELECT",SELECT:void 0})=>new Promise(async function(t,o){isEmpty(e.SELECT)||(SELECT=e.SELECT),SELECT.$progress=null,t(SELECT.$selected_root)})),Helper.is_array=(e=>new Promise(async function(t,o){t(Array.isArray(e)||!!e&&"object"==typeof e&&"number"==typeof e.length&&(0===e.length||e.length>0&&e.length-1 in e))})),Helper.resolve=((e,t,o)=>new Promise(async function(r,i){let n=e=>{r(e)};try{if(t&&t.length>0){n(Function("new_val","with(this) {this"+t+"=new_val; return this;}").bind(e)(o))}else n(e=o)}catch(e){l={_:"Helper.resolve",error:e},console.log("~~~ err ~~~",l),i(l)}var l})),TRANSFORM._fillout=(e=>new Promise(async function(t,o){let r=e=>{t(e)};try{let t=/\{\{(.*?)\}\}/g,n=/^\{\{((?!\}\}).)*\}\}$/,l=e.variable,s=e.data,a=e.template,E=l.replace(t,"$1");if(s){let e;-1===["number","string","array","boolean","function"].indexOf(typeof s)&&(s.$root=root);let t=/function\([ ]*\)[ ]*\{(.*)\}[ ]*$/g.exec(E),o=(e=t?Function("with(this) {"+t[1]+"}").bind(s):/\breturn [^;]+;?[ ]*$/.test(E)&&/return[^}]*$/.test(E)?Function("with(this) {"+E+"}").bind(s):Function("with(this) {return ("+E+")}").bind(s))();if(delete s.$root,o&&(o=o.valueOf()),void 0===o)r(a);else if(o)a?n.test(a)?r(o):r(a.replace(l,o)):r(o);else{if(!a)return"";n.test(a)?r(o):r(a.replace(l,""))}}else r(a)}catch(e){i={_:"_fillout",error:e},console.log("~~~ err ~~~",i),o(i)}var i})),TRANSFORM.fillout=((e,t,o)=>new Promise(async function(r,i){try{let l=t;if(await Helper.is_template(t)){let r=/\{\{(.*?)\}\}/g,i=t.match(r);if(i)if(o)l=await TRANSFORM._fillout({variable:i[0],data:e,template:null});else for(let t=0;t<i.length;t++){let o=i[t];l=await TRANSFORM._fillout({variable:o,data:e,template:l})}else console.warn("здесь был return пока не вижу зачем он")}r(l)}catch(e){n={_:"error menu",error:e},console.log("~~~ err ~~~",n),i(n)}var n})),TRANSFORM.tokenize=(e=>new Promise(async(t,o)=>{try{let r,i=/\{\{(.+)\}\}/g,n=(e=e.replace(i,"$1")).trim().split(" "),l=null;if(n.length>0&&"#"===n[0][0]){l={name:r=n.shift(),expression:n.join(" ")}}(e=>{t(e)})(l)}catch(e){(e=>{o(e)})({_:"error menu",error:e})}})),TRANSFORM.run=((e,t)=>new Promise(async(o,r)=>{let i=e=>{o(e)};try{let o,n;if("string"==typeof e)if(await Helper.is_template(e)){/\{\{([ ]*#include)[ ]*([^ ]*)\}\}/g.test(e)?(n=await TRANSFORM.tokenize(e),o=n.expression?await TRANSFORM.fillout(t,"{{"+n.expression+"}}",!0):e):o=await TRANSFORM.fillout(t,e)}else o=e;else if(await Helper.is_array(e))if(await Conditional.is(e))o=await Conditional.run(e,t);else{o=[];for(let r=0;r<e.length;r++){let i=await TRANSFORM.run(e[r],t);i&&o.push(i)}}else if("[object Object]"===Object.prototype.toString.call(e)){o={};let r=/\{\{([ ]*#include)[ ]*(.*)\}\}/,i=Object.keys(e).filter(function(e){return r.test(e)});i.length>0&&(n=await TRANSFORM.tokenize(i[0]),o=n.expression?await TRANSFORM.fillout(e[i[0]],"{{"+n.expression+"}}",!0):e[i[0]]);for(let r in e)if(await Helper.is_template(r))if(n=await TRANSFORM.tokenize(r)){if("#include"===n.name);else if("#let"===n.name){if(await Helper.is_array(e[r])&&2==e[r].length){let i=e[r][0],n=e[r][1],l=TRANSFORM.run(i,t);for(let e in l)TRANSFORM.memory[e]=l[e],t[e]=l[e];o=await TRANSFORM.run(n,t)}}else if("#concat"===n.name)await Helper.is_array(e[r])&&(o=[],e[r].forEach(function(e){let r=TRANSFORM.run(e,t);o=o.concat(r)}),/\{\{(.*?)\}\}/.test(JSON.stringify(o))&&(o=e));else if("#merge"===n.name){if(await Helper.is_array(e[r]))if(o={},e[r].forEach(function(e){let r=TRANSFORM.run(e,t);for(let e in r)o[e]=r[e]}),"object"==typeof t){delete o.$index;for(let e in TRANSFORM.memory)delete o[e]}else{delete String.prototype.$index,delete Number.prototype.$index,delete Function.prototype.$index,delete Array.prototype.$index,delete Boolean.prototype.$index;for(let e in TRANSFORM.memory)delete String.prototype[e],delete Number.prototype[e],delete Function.prototype[e],delete Array.prototype[e],delete Boolean.prototype[e]}}else if("#each"===n.name){let i=await TRANSFORM.fillout(t,"{{"+n.expression+"}}",!0);if(i&&await Helper.is_array(i)){o=[];for(let t=0;t<i.length;t++){if("object"==typeof i[t]){i[t].$index=t;for(let e in TRANSFORM.memory)i[t][e]=TRANSFORM.memory[e]}else{String.prototype.$index=t,Number.prototype.$index=t,Function.prototype.$index=t,Array.prototype.$index=t,Boolean.prototype.$index=t;for(let e in TRANSFORM.memory)String.prototype[e]=TRANSFORM.memory[e],Number.prototype[e]=TRANSFORM.memory[e],Function.prototype[e]=TRANSFORM.memory[e],Array.prototype[e]=TRANSFORM.memory[e],Boolean.prototype[e]=TRANSFORM.memory[e]}let n=await TRANSFORM.run(e[r],i[t]);if("object"==typeof i[t]){delete i[t].$index;for(let e in TRANSFORM.memory)delete i[t][e]}else{delete String.prototype.$index,delete Number.prototype.$index,delete Function.prototype.$index,delete Array.prototype.$index,delete Boolean.prototype.$index;for(let e in TRANSFORM.memory)delete String.prototype[e],delete Number.prototype[e],delete Function.prototype[e],delete Array.prototype[e],delete Boolean.prototype[e]}n&&o.push(n)}}else o=e}}else{let i=await TRANSFORM.fillout(t,r),n=await TRANSFORM.fillout(t,e[r]);void 0!==i&&void 0!==n&&(o[i]=n)}else if("string"==typeof e[r])if((n=await TRANSFORM.tokenize(e[r]))&&"#?"===n.name){let e=await TRANSFORM.fillout(t,"{{"+n.expression+"}}");e!=="{{"+n.expression+"}}"&&e&&(o[r]=e)}else{let i=await TRANSFORM.run(e[r],t);void 0!==i&&(o[r]=i)}else{let i=await TRANSFORM.run(e[r],t);void 0!==i&&(o[r]=i)}}else i(e);i(o)}catch(e){(e=>{console.log("~~~ err ~~~",e),r(e)})({_:"error menu",error:e})}})),Conditional.is=(e=>new Promise(async(t,o)=>{let r=e=>{t(e)};try{if(await Helper.is_array(e))if(0===e.length)r(!1);else{let t=!0;for(let o=0;o<e.length;o++){let o=e[0];if("object"!=typeof o){t=!1;break}if(1!==Object.keys(o).length){t=!1;break}}if(t){let t,o=e[0];for(let e in o)(t=await TRANSFORM.tokenize(e))&&t.name&&t.expression&&0!==t.expression.length?"#if"!==t.name.toLowerCase()&&r(!1):r(!1);if(1===e.length)r(!0);else{let o=!0;for(let r=1;r<e.length-1;r++){let i=e[r];for(let e in i)if("#elseif"!==(t=await TRANSFORM.tokenize(e)).name.toLowerCase()){o=!1;break}}if(o){let o=e[e.length-1],i=!0;for(let e in o)t=await TRANSFORM.tokenize(e),-1===["#else","#elseif"].indexOf(t.name.toLowerCase())&&(i=!1);r(i)}else r(!0)}}else r(!1)}else r(!1)}catch(e){(e=>{console.log("~~~ err ~~~",e),o(e)})({_:"is",error:e})}})),SELECT.select=((e,t,o)=>new Promise(async function(r,i){try{isEmpty(t)||(e.filter=t),isEmpty(o)||(e.serialized=o);let n={};n=isEmpty(e.this)?e:e.this;try{o&&(n=JSON.parse(e))}catch(e){}t?(SELECT.$selected=[],await SELECT.exec(n,"",t)):SELECT.$selected=null,n&&(Helper.is_array(n)||"object"==typeof n)?(SELECT.$progress||(Helper.is_array(n)?(SELECT.$val=[],SELECT.$selected_root=[]):(SELECT.$val={},SELECT.$selected_root={})),Object.keys(n).forEach(function(e){SELECT.$val[e]=n[e],SELECT.$selected_root[e]=n[e]})):(SELECT.$val=n,SELECT.$selected_root=n),SELECT.$progress=!0,(e=>{r(e)})(SELECT)}catch(e){i({_:"error menu",error:e})}})),SELECT.transformWith=((e,t,o)=>new Promise(async(r,i)=>{try{isEmpty(SELECT.$progress)&&(SELECT.$progress=null),isEmpty(SELECT.$parsed)&&(SELECT.$parsed=[]),isEmpty(o)||(SELECT=Object.assign(SELECT,o));let l={};l=isEmpty(e.template)?e:e.template,isEmpty(t)&&(e.serialized=t);try{t&&(l=JSON.parse(e))}catch(e){}if(SELECT.$template_root=l,String.prototype.$root=SELECT.$selected_root,Number.prototype.$root=SELECT.$selected_root,Function.prototype.$root=SELECT.$selected_root,Array.prototype.$root=SELECT.$selected_root,Boolean.prototype.$root=SELECT.$selected_root,root=SELECT.$selected_root,SELECT.$selected&&SELECT.$selected.length>0)SELECT.$selected.sort(function(e,t){return t.path.length-e.path.length}).forEach(function(e){console.assert(!1);var t=TRANSFORM.run(l,e.object);SELECT.$selected_root=Helper.resolve(SELECT.$selected_root,e.path,t),e.object=t}),SELECT.$selected.sort(function(e,t){return e.index-t.index});else{var n=await TRANSFORM.run(l,SELECT.$selected_root);SELECT.$selected_root=await Helper.resolve(SELECT.$selected_root,"",n)}delete String.prototype.$root,delete Number.prototype.$root,delete Function.prototype.$root,delete Array.prototype.$root,delete Boolean.prototype.$root,performance.now(!0),(e=>{r(e)})(SELECT)}catch(e){(e=>{i(e)})({_:"error menu",error:e})}}));let _stringify=JSON.stringify;JSON.stringify=function(e,t,o){return-1!==["number","string","boolean"].indexOf(typeof e)?_stringify(e,t,o):_stringify(e,t||function(e,t){if(!(SELECT.$injected&&SELECT.$injected.length>0&&-1!==SELECT.$injected.indexOf(e)||"$root"===e||"$index"===e||e in TRANSFORM.memory))return"function"==typeof t?"("+t.toString()+")":t},o)};export default(e={_:"json"})=>new Promise(async(e,t)=>{object.class=class{constructor(e){this.select=this.select.bind(this),this.transformWith=this.transformWith.bind(this),this.root=this.root.bind(this)}root(e){return SELECT.root(e)}transformWith(e,t,o){return SELECT.transformWith(e,t,o)}select(e={_:"select",this:void 0,filter:!1,serialized:!1},t,o){return SELECT.select(e,t,o)}get self(){return object}},(t=>{e(t)})(object)});