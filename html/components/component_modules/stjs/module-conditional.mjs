let Conditional={};Conditional.is=(e=>new Promise(async(o,l)=>{let i=e=>{o(e)};try{if(colorlog(">~~~~~~~~~ Conditional.is ~~~~~~~~~<","#8034eb",e),await Helper.is_array(e))if(0===e.length)colorlog(">~~~~~~~~~ Conditional.is ~~~~~false~~~~<","red",e),i(!1);else{let o=!0;for(let l=0;l<e.length;l++){let l=e[0];if("object"!=typeof l){colorlog(">~~~~~~~~~ Conditional.is ~~~~~~~~~<","#8034eb",l),o=!1;break}if(1!==Object.keys(l).length){o=!1;break}}if(o){let o,l=e[0];for(let t in l)(o=await TRANSFORM.tokenize(t))&&o.name&&o.expression&&0!==o.expression.length?"#if"!==o.name.toLowerCase()&&(colorlog(">~~~~~~~~~ Conditional.is ~~~~~false~~~~<","red",e),i(!1)):(colorlog(">~~~~~~~~~ Conditional.is ~~~~~false~~~~<","red",e),i(!1));if(1===e.length)colorlog(">~~~~~~~~~ Conditional.is ~~~~~true~~~~<","red",e),i(!0);else{colorlog(">~~~~~~~~~ Conditional.is ~~~~~else~~~~<","red",e);let l=!0;for(let i=1;i<e.length-1;i++){let t=e[i];for(let e in t)if("#elseif"!==(o=await TRANSFORM.tokenize(e)).name.toLowerCase()){l=!1;break}}if(l){let l=e[e.length-1],t=!0;for(let e in l)o=await TRANSFORM.tokenize(e),colorlog(">~~~~~~~~~ Conditional.is ~~~~~~~~~<","#8034eb",o),-1===["#else","#elseif"].indexOf(o.name.toLowerCase())&&(t=!1);colorlog(">~~~~~~~~~ Conditional.is ~~~~~verify~~~~<","red",t),i(t)}else i(!0)}}else i(!1)}else colorlog(">~~~~~~~~~ Conditional.is ~~~~~false~~~~<","red",e),i(!1)}catch(e){(e=>{console.log("~~~ err ~~~",e),l(e)})({_:"is",error:e})}}));export default Conditional;