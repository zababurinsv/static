import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty_t.mjs";let root,SELECT={};SELECT.$progress=!1,SELECT.$selected=!1;const handler={get:(e,t)=>(console.log("~~~ get ~~~",t,"---\x3e",e[t]),e[t]),set:(e,t,o)=>(console.log("~~~ set ~~~",t,"---\x3e",o),e[t]=o,e)};function proxy(e){return e=new Proxy(e,handler)}let Helper={is_template:e=>new Promise(async function(t,o){t(/\{\{(.+)\}\}/g.test(e))})},TRANSFORM={},object={};object.Helper=proxy(Helper),object.SELECT=proxy(SELECT),Helper.is_array=(e=>new Promise(async function(t,o){t(Array.isArray(e)||!!e&&"object"==typeof e&&"number"==typeof e.length&&(0===e.length||e.length>0&&e.length-1 in e))})),Helper.resolve=((e,t,o)=>new Promise(async function(r,l){let i=e=>{r(e)};try{if(t&&t.length>0){i(Function("new_val","with(this) {this"+t+"=new_val; return this;}").bind(e)(o))}else i(e=o)}catch(e){n={_:"Helper.resolve",error:e},console.log("~~~ err ~~~",n),l(n)}var n})),TRANSFORM._fillout=(e=>new Promise(async function(t,o){let r=e=>{t(e)};try{let t=/\{\{(.*?)\}\}/g,i=/^\{\{((?!\}\}).)*\}\}$/,n=e.variable,s=e.data,a=e.template,p=n.replace(t,"$1");if(s){let e;-1===["number","string","array","boolean","function"].indexOf(typeof s)&&(s.$root=root);let t=/function\([ ]*\)[ ]*\{(.*)\}[ ]*$/g.exec(p),o=(e=t?Function("with(this) {"+t[1]+"}").bind(s):/\breturn [^;]+;?[ ]*$/.test(p)&&/return[^}]*$/.test(p)?Function("with(this) {"+p+"}").bind(s):Function("with(this) {return ("+p+")}").bind(s))();if(delete s.$root,o&&(o=o.valueOf()),void 0===o)r(a);else if(o)a?i.test(a)?r(o):r(a.replace(n,o)):r(o);else{if(!a)return"";i.test(a)?r(o):r(a.replace(n,""))}}else r(a)}catch(e){l={_:"_fillout",error:e},console.log("~~~ err ~~~",l),o(l)}var l})),TRANSFORM.fillout=((e,t,o)=>new Promise(async function(r,l){try{let n=t;if(await Helper.is_template(t)){let r=/\{\{(.*?)\}\}/g,l=t.match(r);if(l)if(o)n=await TRANSFORM._fillout({variable:l[0],data:e,template:null});else for(let t=0;t<l.length;t++){let o=l[t];n=await TRANSFORM._fillout({variable:o,data:e,template:n})}else console.warn("здесь был return пока не вижу зачем он")}r(n)}catch(e){i={_:"error menu",error:e},console.log("~~~ err ~~~",i),l(i)}var i})),TRANSFORM.tokenize=(e=>new Promise(async(t,o)=>{try{let r,l=/\{\{(.+)\}\}/g,i=(e=e.replace(l,"$1")).trim().split(" "),n=null;if(i.length>0&&"#"===i[0][0]){n={name:r=i.shift(),expression:i.join(" ")}}(e=>{t(e)})(n)}catch(e){(e=>{o(e)})({_:"error menu",error:e})}})),TRANSFORM.run=((e,t)=>new Promise(async(o,r)=>{let l=e=>{o(e)};try{let o,i;if("string"==typeof e)if(await Helper.is_template(e)){let r=/\{\{([ ]*#include)[ ]*([^ ]*)\}\}/g;console.log("include_string_re",r.test(e)),r.test(e)?(i=await TRANSFORM.tokenize(e),o=i.expression?TRANSFORM.fillout(t,"{{"+i.expression+"}}",!0):e):o=TRANSFORM.fillout(t,e)}else o=e;else if(await Helper.is_array(e))if(await Conditional.is(e))o=await Conditional.run(e,t);else{o=[];for(let r=0;r<e.length;r++){let l=await TRANSFORM.run(e[r],t);l&&o.push(l)}}else if("[object Object]"===Object.prototype.toString.call(e)){o={};let r=/\{\{([ ]*#include)[ ]*(.*)\}\}/,l=Object.keys(e).filter(function(e){return r.test(e)});l.length>0&&(i=await TRANSFORM.tokenize(l[0]),o=i.expression?await TRANSFORM.fillout(e[l[0]],"{{"+i.expression+"}}",!0):e[l[0]]);for(let r in e)if(await Helper.is_template(r))if(i=await TRANSFORM.tokenize(r)){if("#include"===i.name);else if("#let"===i.name){if(await Helper.is_array(e[r])&&2==e[r].length){let l=e[r][0],i=e[r][1],n=TRANSFORM.run(l,t);for(let e in n)TRANSFORM.memory[e]=n[e],t[e]=n[e];o=await TRANSFORM.run(i,t)}}else if("#concat"===i.name)await Helper.is_array(e[r])&&(o=[],e[r].forEach(function(e){let r=TRANSFORM.run(e,t);o=o.concat(r)}),/\{\{(.*?)\}\}/.test(JSON.stringify(o))&&(o=e));else if("#merge"===i.name){if(await Helper.is_array(e[r]))if(o={},e[r].forEach(function(e){let r=TRANSFORM.run(e,t);for(let e in r)o[e]=r[e]}),"object"==typeof t){delete o.$index;for(let e in TRANSFORM.memory)delete o[e]}else{delete String.prototype.$index,delete Number.prototype.$index,delete Function.prototype.$index,delete Array.prototype.$index,delete Boolean.prototype.$index;for(let e in TRANSFORM.memory)delete String.prototype[e],delete Number.prototype[e],delete Function.prototype[e],delete Array.prototype[e],delete Boolean.prototype[e]}}else if("#each"===i.name){let l=await TRANSFORM.fillout(t,"{{"+i.expression+"}}",!0);if(l&&await Helper.is_array(l)){o=[];for(let t=0;t<l.length;t++){if("object"==typeof l[t]){l[t].$index=t;for(let e in TRANSFORM.memory)l[t][e]=TRANSFORM.memory[e]}else{String.prototype.$index=t,Number.prototype.$index=t,Function.prototype.$index=t,Array.prototype.$index=t,Boolean.prototype.$index=t;for(let e in TRANSFORM.memory)String.prototype[e]=TRANSFORM.memory[e],Number.prototype[e]=TRANSFORM.memory[e],Function.prototype[e]=TRANSFORM.memory[e],Array.prototype[e]=TRANSFORM.memory[e],Boolean.prototype[e]=TRANSFORM.memory[e]}let i=await TRANSFORM.run(e[r],l[t]);if("object"==typeof l[t]){delete l[t].$index;for(let e in TRANSFORM.memory)delete l[t][e]}else{delete String.prototype.$index,delete Number.prototype.$index,delete Function.prototype.$index,delete Array.prototype.$index,delete Boolean.prototype.$index;for(let e in TRANSFORM.memory)delete String.prototype[e],delete Number.prototype[e],delete Function.prototype[e],delete Array.prototype[e],delete Boolean.prototype[e]}i&&o.push(i)}}else o=e}}else{let l=await TRANSFORM.fillout(t,r),i=await TRANSFORM.fillout(t,e[r]);void 0!==l&&void 0!==i&&(o[l]=i)}else if("string"==typeof e[r])if((i=await TRANSFORM.tokenize(e[r]))&&"#?"===i.name){let e=await TRANSFORM.fillout(t,"{{"+i.expression+"}}");e!=="{{"+i.expression+"}}"&&e&&(o[r]=e)}else{let l=await TRANSFORM.run(e[r],t);void 0!==l&&(o[r]=l)}else{let l=await TRANSFORM.run(e[r],t);void 0!==l&&(o[r]=l)}}else l(e);l(o)}catch(e){(e=>{console.log("~~~ err ~~~",e),r(e)})({_:"error menu",error:e})}}));let Conditional={};Conditional.is=(e=>new Promise(async(t,o)=>{let r=e=>{t(e)};try{if(await Helper.is_array(e))if(0===e.length)r(!1);else{let t=!0;for(let o=0;o<e.length;o++){let o=e[0];if("object"!=typeof o){t=!1;break}if(1!==Object.keys(o).length){t=!1;break}}if(t){let t,o=e[0];for(let e in o)(t=await TRANSFORM.tokenize(e))&&t.name&&t.expression&&0!==t.expression.length?"#if"!==t.name.toLowerCase()&&r(!1):r(!1);if(1===e.length)r(!0);else{let o=!0;for(let r=1;r<e.length-1;r++){let l=e[r];for(let e in l)if("#elseif"!==(t=TRANSFORM.tokenize(e)).name.toLowerCase()){o=!1;break}}if(o){let o=e[e.length-1],l=!0;for(let e in o)t=TRANSFORM.tokenize(e),-1===["#else","#elseif"].indexOf(t.name.toLowerCase())&&(l=!1);r(l)}else r(!0)}}else r(!1)}else r(!1)}catch(e){(e=>{console.log("~~~ err ~~~",e),o(e)})({_:"is",error:e})}}));export default(e={_:"json"})=>new Promise(async(e,t)=>{object.class=class{constructor(e){this.select=this.select.bind(this),this.transformWith=this.transformWith.bind(this)}transformWith(e={_:"select",template:void 0,serialized:!1,SELECT:void 0},t,o){return new Promise(async function(r,l){try{isEmpty(SELECT.$progress)&&(SELECT.$progress=null),isEmpty(SELECT.$parsed)&&(SELECT.$parsed=[]),isEmpty(o)||(SELECT=Object.assign(SELECT,o),console.warn("нужно проверить работоспособность при совпадении двух свойств",SELECT));let i={};i=isEmpty(e.template)?e:e.template,isEmpty(t)||(e.serialized=t);try{t&&(i=JSON.parse(e))}catch(e){}SELECT.$template_root=i,String.prototype.$root=SELECT.$selected_root,Number.prototype.$root=SELECT.$selected_root,Function.prototype.$root=SELECT.$selected_root,Array.prototype.$root=SELECT.$selected_root,Boolean.prototype.$root=SELECT.$selected_root;SELECT.$selected_root;if(SELECT.$selected&&SELECT.$selected.length>0){console.assert(!1,SELECT.$selected);let e=SELECT.$selected.sort(function(e,t){return t.path.length-e.path.length});console.assert(!1,e),SELECT.$selected.sort(function(e,t){return e.index-t.index})}else{let e=await TRANSFORM.run(i,SELECT.$selected_root);SELECT.$selected_root=await Helper.resolve(SELECT.$selected_root,"",e),(e=>{r(e)})({_:"transformWith",parsedObject:e,SELECT:SELECT})}}catch(e){l({_:"error menu",error:e})}})}select(e={_:"select",this:void 0,filter:!1,serialized:!1},t,o){return new Promise(async function(r,l){try{isEmpty(t)||(e.filter=t),isEmpty(o)||(e.serialized=o);let i={};i=isEmpty(e.this)?e:e.this;try{o&&(i=JSON.parse(e))}catch(e){}t?(SELECT.$selected=[],SELECT.exec(i,"",t)):SELECT.$selected=null,i&&(Helper.is_array(i)||"object"==typeof i)?(SELECT.$progress||(Helper.is_array(i)?(SELECT.$val=[],SELECT.$selected_root=[]):(SELECT.$val={},SELECT.$selected_root={})),Object.keys(i).forEach(function(e){SELECT.$val[e]=i[e],SELECT.$selected_root[e]=i[e]})):(SELECT.$val=i,SELECT.$selected_root=i),SELECT.$progress=!0,(e=>{r(e)})(SELECT)}catch(e){l({_:"error menu",error:e})}})}get self(){return object}},(t=>{e(t)})(object)});