import colorlog from"/static/html/components/component_modules/colorLog/colorLog.mjs";import queue from"/static/html/components/component_modules/queue/queue.mjs";let Class=class{constructor(t){this.pre=this.pre.bind(this),this.key=this.key.bind(this),this.post=this.post.bind(this),this.end=this.end.bind(this),document.addEventListener("typeScript-end",this.end)}key(t,e,s,a){return new Promise(function(o,r){"/"===e&&(a.path[`${s}`]=`${a.path[`${s}`]}${e}${t[e]}`),"number"==typeof e&&a.file[`${s}`].push(`${a.path[`${s}`]}/${t[e]}`),o(!0)})}pre(t=!0,e="a",s="black",a={_:"default"},o="default"){return new Promise(async(r,i)=>{colorlog(t,e,s,a,o);let l={state:0},n={relation:[],property:[],substrate:[]},p={relation:"",property:"",substrate:""};const c=e.deepIterator.default(a,{onlyLeaves:!0});for(let{parent:t,key:e}of c){switch(t[e]){case"relation":l.state="1";break;case"property":l.state="2";break;case"substrate":l.state="3"}switch(l.state){case"1":await this.key(t,e,"relation",{file:n,path:p});break;case"2":await this.key(t,e,"property",{file:n,path:p});break;case"3":await this.key(t,e,"substrate",{file:n,path:p});break;default:"/"===e&&(p.relation=`${e}${t[e]}`,p.property=`${e}${t[e]}`,p.substrate=`${e}${t[e]}`)}}colorlog(t,"end",s,a,o),r({path:p,file:n})})}post(t=!0,e="a",s="black",a={_:"player"},o="player"){return queue(t,e,s,a,o)}end(t){queue(t.detail.console,"~end",t.detail.color,t.detail.substrate,t.detail.relation).then(t=>{colorlog(!0,"stat","stat",t,"статистика")})}get self(){return object}};export default Class;