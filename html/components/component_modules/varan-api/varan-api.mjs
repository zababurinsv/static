let api={post:{}};api.post.file=((e,o,n,t)=>new Promise(function(s,l){if(e.isEmpty)e.isEmpty(n)&&console.assert(!1,"не указан путь куда отсылать"),e.isEmpty(t)&&(console.warn("не указан путь куда отправлять после обработки(значит на этой же ноде)"),t="null");else{let o={object:"varan-api",module:"isEmpty"};bundle.default(o,e,(e,o)=>{console.log("error",e),console.log("object",o),o.isEmpty(n)&&console.assert(!1,"не указан путь куда отсылать"),o.isEmpty(t)&&(console.warn("не указан путь куда отправлять после обработки(значит на этой же ноде)"),t="null")})}let i=new FormData;i.append("file",o);let a=new XMLHttpRequest;a.open("POST",`${n}/api/${t}`),a.send(i),s(e)})),api.post.json=((e,o,n,t)=>new Promise(function(s,l){if(e.isEmpty)e.isEmpty(n)&&console.assert(!1,"не указан путь куда отсылать"),e.isEmpty(t)&&(console.warn("не указан путь куда отправлять после обработки(значит на этой же ноде)"),t="null");else{let o={object:"varan-api",module:"isEmpty"};bundle.default(o,e,(e,o)=>{console.log("error",e),console.log("object",o),o.isEmpty(n)&&console.assert(!1,"не указан путь куда отсылать"),o.isEmpty(t)&&(console.warn("не указан путь куда отправлять после обработки(значит на этой же ноде)"),t="null")})}fetch(`${n}/api/${t}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(o)}).then(function(e){if(e.ok)return e.json()}).then(function(e){s(e)}).catch(function(e){console.assert(!1,"varan-api",e)})}));export default api;