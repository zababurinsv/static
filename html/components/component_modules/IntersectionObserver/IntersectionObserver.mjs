import action from"/static/html/components/component_modules/action/action.mjs";export default(e,t,...n)=>new Promise(function(a,r){let c=e=>{a(e)},s=e=>{console.log("~~~ err router ~~~",e),r(e)};switch(t){case"get":(async(e,a,r)=>{try{switch(console.log(`${t}[(${e.input})${e[a]}]`),e[a]){case"lazy":(async(e,t,n)=>{try{if("IntersectionObserver"in window){let t=new IntersectionObserver(function(e,n){e.forEach(async function(e){if(e.isIntersecting){let n=e.target,a=await action({input:"intersectionobserver",data:n.dataset.src,type:"lazyImg"},"get","type");n.src=a.mongo.img,n.srcset=a.mongo.img,n.classList.remove("lazy"),t.unobserve(n)}})});e.data.forEach(function(e){t.observe(e)})}c(e)}catch(e){s(e)}})(e,n[0],n[1],n[2],n[3]);break;case"video":(async(e,t,n)=>{try{let t=new IntersectionObserver(function(e,n){e.forEach(async function(n){n.isIntersecting&&e.forEach(async function(e){if(e.isIntersecting){for(var n in e.target.children){var a=e.target.children[n];"string"==typeof a.tagName&&"SOURCE"===a.tagName&&(a.src=a.dataset.src)}e.target.load(),e.target.classList.remove("lazy"),t.unobserve(e.target)}})})});e.data.forEach(function(e){t.observe(e)}),c(e)}catch(e){s(e)}})(e,n[0],n[1],n[2],n[3]);break;default:s(`новая функция ${t}`)}c(e)}catch(e){s(e)}})(e,n[0],n[1],n[2],n[3]);break;case"set":(async(e,a,r)=>{try{switch(console.log(`app(${t}[(${e.input})${e[a]}]intersection)`),e[a]){case"observer":(async(e,t,n)=>{try{"IntersectionObserver"in window&&new IntersectionObserver(function(e,t){e.forEach(async function(e){if(e.isIntersecting)e.target;else switch(e.target.tagName){case"LACERTA-REQUEST":case"LACERTA-GALLERY":e.target.shadowRoot.querySelector("details").open=!1}})}).observe(e.this),c(e)}catch(e){s(e)}})(e,n[0],n[1],n[2],n[3]);break;default:s(`новая функция ${t}`)}c(e)}catch(e){s(e)}})(e,n[0],n[1],n[2],n[3]);break;default:s(`новая функция ${t}`)}});