import store from"../index";import req from"../../../system/request/index";import object from"../../../system/Events/module/promise";let uniqid=require("uniqid");export const loadTodosG=({commit:o})=>{o("setLoading",!0),console.log("(Storage[(white)dispatch])todo[(action)loadTodosG]",store.getters.user),req.req[0].setUrl("node0").setTask("getTodosG").setUser(store.getters.user),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]loadTodosG",e.data),o("setLoadedTodosG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const removeTodoG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG(actions)removeTodoG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("removeTodoG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]removeTodoG",e.data),o("deleteTodoG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const loadInProgressG=({commit:o})=>{o("setLoading",!0),console.log("(Storage[(white)dispatch])todo[(action)loadTodosG]"),req.req[0].setUrl("node0").setTask("getProgressG").setUser(store.getters.user),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]loadTodosG",e.data),o("setLoadedInProgressG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const loadInDoneG=({commit:o})=>{o("setLoading",!0),req.req[0].setUrl("node0").setTask("getDoneG").setUser(store.getters.user),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]loadTodosG",e.data),o("setLoadedInDoneG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const createTodoG=({commit:o,getters:e},t)=>{o("setLoading",!0);const s={key:uniqid(),description:t.description,date:t.date.toISOString(),creatorId:e.user.id};req.req[0].setUrl("node0").setTask("createTodoG").setData(s).setUser(e.user),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]createTodoG",e.data),o("createTodoG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const updateTodoDataG=({commit:o},e)=>{o("setLoading",!0),o("setLoading",!1)};export const updateProgressDataG=({commit:o},e)=>{o("setLoading",!0);const t={};e.description&&(t.description=e.description),e.date&&(t.date=e.date)};export const updateDoneDataG=({commit:o},e)=>{o("setLoading",!0);const t={};e.description&&(t.description=e.description),e.date&&(t.date=e.date)};export const removeProgressG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG(Actions)removeProgressG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("removeProgressG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]removeProgressG",e.data),o("deleteProgressG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const removeDoneG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG(Actions)removeProgressG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("removeDoneG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]removeDoneG",e.data),o("deleteDoneG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const toProgressG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG[(actions)]toProgressG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("toProgressG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]toProgressGPromise",e.data),o("createProgressG",e.data),o("deleteTodoG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const toDoneG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG[(actions)]toProgressG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("toDoneG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]toDoneG Promise",e.data),o("createDoneG",e.data),o("deleteProgressG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};export const toHistoryG=({commit:o},e)=>{o("setLoading",!0),console.log("todoG[(actions)]toHistoryG",e);const t={key:uniqid(),id:e};req.req[0].setUrl("node0").setTask("toHistoryG").setData(t),object[0].xArt[0].mySql(req.req[0]).push(req.req[0]).then(e=>{console.log("todoG[(actions)]toHistoryG Promise",e.data),o("deleteDoneG",e.data),o("setLoading",!1)}).catch(o=>{console.log(o)})};