let object={};export default async e=>new Promise(async(e,c)=>{navigator.gpu?(object.adapter=await navigator.gpu.requestAdapter(),object.device=await object.adapter.requestDevice(),[object.gpuBuffer,object.arrayBuffer]=object.device.createBufferMapped({size:4,usage:GPUBufferUsage.MAP_WRITE}),[object.gpuWriteBuffer,object.arrayBuffer]=object.device.createBufferMapped({size:4,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),new Uint8Array(object.arrayBuffer).set([0,1,2,3]),object.gpuWriteBuffer.unmap(),object.gpuReadBuffer=object.device.createBuffer({size:4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),object.copyEncoder=object.device.createCommandEncoder(),object.copyEncoder.copyBufferToBuffer(object.gpuWriteBuffer,0,object.gpuReadBuffer,0,4),object.copyCommands=object.copyEncoder.finish(),object.device.defaultQueue.submit([object.copyCommands]),object.copyArrayBuffer=await object.gpuReadBuffer.mapReadAsync(),console.log(new Uint8Array(object.copyArrayBuffer)),object.class=class{constructor(e){}self(){return object}},e(object)):console.log("WebGPU is not supported. Enable chrome://flags/#enable-unsafe-webgpu flag.")});