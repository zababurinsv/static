import colorlog from"/static/html/components/component_modules/colorLog/colorLog.mjs";import SELECT from"/static/html/components/component_modules/json/module-select.mjs";import Helper from"/static/html/components/component_modules/json/module-helper.mjs";import TRANSFORM from"/static/html/components/component_modules/json/module-transform.mjs";import Conditional from"/static/html/components/component_modules/json/module-conditional.mjs";let Class=class{constructor(o=!0){this.select=this.select.bind(this),this.transformWith=this.transformWith.bind(this),this.transform=this.transform.bind(this),this.root=this.root.bind(this),"boolean"!=typeof o&&console.assert(!1,"значение для вывода на консоль должно быть true/false"),this.view=o}root(o){colorlog(this.view,"root","4",o,"root");let t=SELECT.root(o,this.view);return colorlog(this.view,"end","4",o,"root"),t}transformWith(o,t,s){colorlog(this.view,"transformWith","2",o,"transformWith");let e=SELECT.transformWith(o,t,s,this.view);return colorlog(this.view,"end","2",o,"transformWith"),e}transform(o,t){colorlog(this.view,"transform","8",o,"transform");let s=SELECT.transform(o,t,this.view);return colorlog(this.view,"end","8",o,"transform"),s}select(o={_:"select",this:void 0,filter:!1,serialized:!1},t,s){colorlog(this.view,"select","1",SELECT,"select");let e=SELECT.select(o,t,s,this.view);return colorlog(this.view,"end","1",SELECT,"select"),e}get self(){return object}};export default Class;