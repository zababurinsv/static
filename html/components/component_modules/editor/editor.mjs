Object.keys||(Object.keys=function(t){if(t!==Object(t))throw new TypeError("Object.keys called on a non-object");var e,o=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&o.push(e);return o});import init from"/static/html/components/component_modules/init/init.mjs";import store from"/static/html/components/component_modules/staticProperty/staticProperty.mjs";import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty.mjs";export default(t,e,...o)=>new Promise(function(i,s){let n=t=>{i(t)},r=t=>{console.log("~~~ err  ~~~",t),s(t)};switch(e){case"get":(async(t,i,s)=>{try{switch(console.log(`app(${e}[(${t.input})${t[i]}]property)`),t[i]){case"editor":(async(t,o,i,s)=>{try{console.log(`app(${e}[(${t.input})${t[o]} ditor]`),isEmpty(t.slot)&&r("должен быть указан слот");let i=await store({input:"editor",this:t.this,target:t.slot,type:"editor"},"get","type");if(isEmpty(i)){isEmpty(t.slot)&&r("должен быть объект slot");let e=await init({input:"editor",this:t.this,slot:t.slot,parent:t.parent,menu:t.menu,type:"editor"},"init","type");n(e)}else n(t)}catch(t){r(t)}})(t,o[0],o[1],o[2],o[3]);break;default:r(`new type ${t[i]}`)}}catch(t){r(t)}})(t,o[0],o[1],o[2],o[3]);break;default:r(`new function ${e}`)}});