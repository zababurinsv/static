import config from"/static/html/components/component_modules/config/index.mjs";let object={staticProperty:[]};object.staticProperty.socket=void 0,object.staticProperty.verify=!0,object.staticProperty.create=(t=>(void 0===object.staticProperty.socket?(object.staticProperty.verify=!1,object.staticProperty.socket=new WebSocket(`${t}`)):object.staticProperty.verify=!0,object.staticProperty.socket));export default async t=>new Promise((t,e)=>{object.socketProtocol="wss",object.class=class{constructor(t){this.socket=object.staticProperty.create("ws://localhost:7007"),!0===object.staticProperty.verify||(this.socket.onopen=function(){console.log("connect web socket is open");let t=new CustomEvent("openConnect",{detail:{data:"openConnect"}});document.dispatchEvent(t)},this.socket.onclose=function(t){t.wasClean?(console.log("Соединение закрыто чисто"),object.staticProperty.socket=void 0):(console.log("Обрыв соединения"),object.staticProperty.socket=void 0),console.log("Код: "+t.code)},this.socket.onerror=function(t){console.warn("Ошибка "+t)},this.socket.addEventListener("message",function(t){let e=JSON.parse(t.data);switch(console.log("response~~~~~~~",e._,e),e._){case"WebRTC":document.cookie=`webRTC= ${e.id}`,sessionStorage.setItem("uid",e.id);break;default:console.warn("необрабатывается",e)}}))}self(){return object}},t(object)});