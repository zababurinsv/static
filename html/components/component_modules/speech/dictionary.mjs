import change from"/static/html/components/component_modules/speech/change.mjs";import indexedDB from"/static/html/components/component_modules/speech/indexedDB.mjs";let dictionary=[{city:[],search:""},{name:[],search:""},{object:[],search:""},{dateExperiences:[],search:""},{class:[],search:""},{type:[],search:""},{metro:[],search:""},{geo:[],search:""},{plans:[],search:""},{price:[],search:""},{finish:[],search:""},{description:[],search:""},{timestampUpdate:[],search:""}];for(let e in dictionary)for(let a in dictionary[e])switch(a){case"city":dictionary[e][a].push({word:"москва",change:"москва"}),dictionary[e][a].push({word:"санкт-петербург",change:"санкт-петербург"}),dictionary[e][a].push({word:"подмосковье",change:"москва"});break;case"name":dictionary[e][a].push({word:"Tokio группа",change:"Tekia Group"}),dictionary[e][a].push({word:"Tokio группа",change:"Tekia Group"}),dictionary[e][a].push({word:"таким грубым",change:"Tekia Group"}),dictionary[e][a].push({word:"Так я группу",change:"Tekia Group"}),dictionary[e][a].push({word:"роуз групп",change:"роуз групп"}),dictionary[e][a].push({word:"кортрос",change:"кортрос"}),dictionary[e][a].push({word:"Капитал гроуп",change:"Капитал гроуп"}),dictionary[e][a].push({word:"вайнбридж",change:"вайнбридж"});break;case"object":dictionary[e][a].push({word:"Биг Тайм",change:"Биг Тайм"}),dictionary[e][a].push({word:"Спайрс",change:"Спайрс"}),dictionary[e][a].push({word:"Микрогород в лесу",change:"Микрогород в лесу"}),dictionary[e][a].push({word:"Big Time",change:"Big Time"}),dictionary[e][a].push({word:"Прайс",change:"Спайрс"});break;case"dateExperiences":break;case"class":dictionary[e][a].push({word:"обычный",change:"обычный"}),dictionary[e][a].push({word:"обычно",change:"обычный"}),dictionary[e][a].push({word:"элитный",change:"элитный"}),dictionary[e][a].push({word:"элитно",change:"элитный"}),dictionary[e][a].push({word:"комфорт",change:"комфорт"})}(async()=>{await indexedDB.set({type:"dictionary",data:dictionary})})();export default{set:async(e,a,...t)=>new Promise(async(a,t)=>{let i=e=>{a(e)},c=e.this.parentNode.querySelectorAll("th");for(let e=0;e<c.length;e++)if(c[e].querySelector("input"))switch(c[e].querySelector("input").id){case"search_input_Developer":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"name":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_Object":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"object":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_Deadline":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"dateExperiences":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_houseClass":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"class":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_houseType":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"type":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_Metro":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"metro":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_geo":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"geo":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_plan":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"plans":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_price":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"price":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_Finish":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"finish":dictionary[a].search=c[e].querySelector("input")}break;case"search_input_AdditionalInfo":for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"description":dictionary[a].search=c[e].querySelector("input")}}else if(c[e].querySelector("select"))for(let a=0;a<dictionary.length;a++)for(let t in dictionary[a])switch(t){case"city":dictionary[a].search=c[e].querySelector("select")}switch(e.type){case"isFinal":(async(e,a,t)=>{let c=e.data.split(" ");for(let e=0;e<c.length;e++)for(let e=0;e<dictionary.length;e++)for(let a in dictionary[e])switch(a){case"city":case"name":case"object":case"dateExperiences":case"class":case"type":case"metro":case"geo":case"plans":case"price":case"finish":case"description":case"timestampUpdate":for(let t in dictionary[e][a]);}i(!0)})(e),i(!0);break;case"isRaw":(async(e,a,t)=>{let c=e.data.split(" ");for(let a=0;a<c.length;a++)for(let t=0;t<dictionary.length;t++)for(let i in dictionary[t])switch(i){case"city":case"name":case"object":case"dateExperiences":for(let e in dictionary[t][i]);break;case"class":for(let r in dictionary[t][i])c[a].toLowerCase()===dictionary[t][i][r].word.toLowerCase()&&change(e.this.parentNode,{type:"search_input_houseClass",data:dictionary[t][i][r].change});break;case"type":case"metro":for(let r in dictionary[t][i])c[a].toLowerCase()===dictionary[t][i][r].word.toLowerCase()&&change(e.this.parentNode,{type:"search_input_houseType",data:dictionary[t][i][r].change});break;case"geo":case"plans":case"price":case"finish":case"description":case"timestampUpdate":for(let e in dictionary[t][i]);}i(!0)})(e),i(!0);break;default:(e=>{t(e)})(`новая функция ${e.type} `)}}),get:async(e,a,...t)=>new Promise(async(a,t)=>{switch(e.type){case"dictionary":(async(e,t,i)=>{(e=>{a(e)})(dictionary=await indexedDB.get({type:"dictionary"}))})();break;default:(e=>{t(e)})(`новая функция ${e.type} `)}}),put:async(e,a,...t)=>new Promise(async(a,t)=>{switch(e.type){case"getAll":break;default:(e=>{t(e)})(`новая функция ${e.type} `)}}),delete:async(e,a,...t)=>new Promise(async(a,t)=>{switch(e.type){case"getAll":((e,t,i)=>{(e=>{a(e)})(sessionStorage.removeItem(e.key))})(e);break;default:(e=>{t(e)})(`новая функция ${e.type} `)}}),clearn:async(e,a,...t)=>new Promise(async(a,t)=>{switch(e.type){case"sessionStorage":((e,t,i)=>{(e=>{a(e)})(!0)})();break;default:(e=>{t(e)})(`новая функция ${e.type} `)}})};