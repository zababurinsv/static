import emoji from"/static/html/components/component_modules/emoji/emoji.mjs";import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty.mjs";import Waves from"/static/html/components/component_modules/bundle/waves/waves.mjs";export default(e,s,t,o,a)=>new Promise(async(t,n)=>{"action";let i=Waves.default;switch(a.toLowerCase()){case"create-nft":if(isEmpty(o[`${a}`]))console.warn(`${emoji("kissing_heart")} субстрат не определён ---\x3e`,o);else try{let e={name:o[`${a}`].name,quantity:1,decimals:0,reisuable:!1,chainId:"T",description:o[`${a}`].description};const t=i.transactions.issue(e,o[`${a}`].dapp);let n=i.transactions.issue(t,o[`${a}`].proofs[0]),m=i.transactions.issue(n,o[`${a}`].proofs[1]),r=await i.transactions.broadcast(m,o[`${a}`].node);s.property(a,r)}catch(e){console.warn({error:e})}break;default:console.warn(`${emoji("kissing_heart")} wavesGame.mjs нет обработчика ---\x3e`,a.toLowerCase(),"[(",e,s,"action",o,a,")a]")}t({key:!0})});