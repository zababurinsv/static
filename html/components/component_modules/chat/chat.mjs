export default async e=>new Promise((s,t)=>{bundle.default(e,"export",async function(t,a){let i={statticProperty:[],count:0,updateChatLastMessage:async(e,s)=>{let t=sessionStorage.getItem("PrivateChat");t=parseInt(t,10);let i=sessionStorage.getItem("id");if(i=parseInt(i,10),t===s.chat_id)if(t===i){let n=sessionStorage.getItem("message_id");if(a.isEmpty(n))sessionStorage.setItem("message_id",s.id);else if(n===s.id);else if(sessionStorage.setItem("message_id",s.id),a.isEmpty(s.data.last_message.sending_state)){if(i===s.data.last_message.sender_user_id)return e.this.shadowRoot.querySelector("#panel").insertAdjacentHTML("afterbegin",`\n                    <div class="messageLeft"><p>${s.content}</p></div>`),e;if(t===s.data.last_message.sender_user_id)return e.this.shadowRoot.querySelector("#panel").insertAdjacentHTML("afterbegin",`\n                     <div class="messageRight"><p>${s.content}</p></div>`),e}}else{let n=sessionStorage.getItem("message_id");if(a.isEmpty(n))sessionStorage.setItem("message_id",s.id);else if(n===s.id);else if(a.isEmpty(s.data.last_message.sending_state)){if(sessionStorage.setItem("message_id",s.id),i===s.data.last_message.sender_user_id)return e.this.shadowRoot.querySelector("#panel").insertAdjacentHTML("afterbegin",`\n                    <div class="messageLeft"><p>${s.content}</p></div>`),e;if(t===s.data.last_message.sender_user_id)return e.this.shadowRoot.querySelector("#panel").insertAdjacentHTML("afterbegin",`\n                     <div class="messageRight"><p>${s.content}</p></div>`),e}}},setMessage:async(e,s)=>e,template:async(e,s)=>{i.statticProperty.id=s,e.this.shadowRoot.querySelector("#chat").innerHTML="",e.this.shadowRoot.querySelector("#chat").insertAdjacentHTML("afterbegin",'\n<div id="panel">\n    \n                \n</div>\n                \n                ')}};i.template.id="right",i.template.className="sidebar",i.class=class{constructor(s){this.webComponents=e.name,this.template=this.template.bind(this),this.setMessage=this.setMessage.bind(this),this.updateChatLastMessage=this.updateChatLastMessage.bind(this)}self(){return i}template(e,s){i.template(e,s).then(e=>e)}setMessage(e,s){i.setMessage(e,s).then(e=>e)}updateChatLastMessage(e,s){i.updateChatLastMessage(e,s).then(e=>e)}},s(i)})});