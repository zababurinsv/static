import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty.mjs";import Signer from"/static/html/components/component_modules/bundle/waves/waves.mjs";import iframeWindow from"/static/html/components/component_modules/waves-provider/module/iframe/iframe-window.mjs";let signer=Signer.default,Class=class{constructor(e){this._seed="",this._options={NETWORK_BYTE:"W".charCodeAt(0),NODE_URL:"https://nodes.wavesplatform.com"}}connect(e){return this._options=e,Promise.resolve()}sign({list:[]}){return Promise.resolve(list.map(e=>signer.signTx({chainId:this._options.NETWORK_BYTE,...e},this._seed)))}login(){return new Promise(async(e,s)=>{document.addEventListener("provider-login",async s=>{e({address:signer.libs.crypto.address(this._seed,this._options.NETWORK_BYTE),publicKey:signer.libs.crypto.publicKey(this._seed)})}),e({address:signer.libs.crypto.address(this._seed,this._options.NETWORK_BYTE),publicKey:signer.libs.crypto.publicKey(this._seed)})})}logout(){return console.log("~~~~~~~~~ logout ~~~~~~~~~"),Promise.resolve()}signTypedData({data:[]}){return Promise.resolve("// TODO")}signMessage(){return Promise.resolve("// TODO")}ProviderSeed(e,s){return isEmpty(s)||(this._options.NODE_URL=s),isEmpty(e)?console.assert(!1,"укажите seed фразу"):this._seed=e,this}saveAs(e,s){let t=window.URL.createObjectURL(e),o=document.createElement("a");o.style="display: none",o.href=t,o.download=s,document.body.appendChild(o),o.click(),document.body.removeChild(o),setTimeout(function(){window.URL.revokeObjectURL(t)},1e3)}get self(){return object}};export default Class;