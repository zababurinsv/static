import conf from"/static/html/components/component_modules/matcher/matcher/this/database/config/index.mjs";import loader from"/static/html/components/component_modules/loader/loader.mjs";function server(t,e,a,n){return new Promise(async(c,o)=>{let s=await loader("https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js","axios");function r(t){return new Promise((e,a)=>{let n=new FormData;for(let e in t)n.append(e,t[e]);e(n)})}switch(n){case"GET":s.get(`${a}${e}`).then(function(e){(t={}).get_n=[],t.mongo=e.data,t.get_n.push(e.data),c(t)}).catch(function(t){console.log(t)}).finally(function(){});break;case"POST":console.log("~~~~~~~~~~~~POST~~~~~~~~~~~~~~~~",`${a}${e}`);let o=await r(t);fetch(`${a}${e}`,{method:n,body:o}).then(function(t){if(t.ok)return t.json();throw new Error("HTTP error, status = "+t.status)}).then(function(e){(t=[]).get_n=[],t.mongo=e,t.get_n.push(e),c(t)}).catch(function(t){console.assert(!1,"webDav",t,`${a}${e}`)});break;case"PUT":console.log("~~~~~~~~~~~~PUT~~~~~~~~~~~~~~~~",`${a}${e}`);let h=await r(t);fetch(`${a}${e}`,{method:n,body:h}).then(function(t){if(t.ok)return t.json();throw new Error("HTTP error, status = "+t.status)}).then(function(e){(t={}).get_n=[],t.mongo=e,t.get_n.push(e),c(t)}).catch(function(t){console.assert(!1,"mongoDb",t)});break;case"DELETE":console.log("~~~~~~~~~~~~DELETE~~~~~~~~~~~~~~~~",`${a}${e}`),fetch(`${a}${e}`,{method:n,headers:{mode:"no-cors"}}).then(function(t){if(t.ok)return t.json();throw new Error("HTTP error, status = "+t.status)}).then(function(t){c({delete:"ok"})}).catch(function(t){console.error("ошибка в запросе mongo",t),c({mongo:"null"})});break;default:console.warn("необрабатываемый тип запроса",t[props])}})}export default(t,e,...a)=>new Promise(function(n,c){let o=t=>{n(t)},s=t=>{console.log("~~~ err  ~~~",t),c(t)};switch(e){case"set":(async(t,n,c)=>{try{switch(t[n]){case"auction":(async(t,e,a)=>{try{t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let e=await server(t.data,t.path,conf.account.web,"POST");o(e)}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"winner":t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let c=await server(t.data,t.path,conf.account.web,"POST");o(c);break;default:s(`new type [(${e})${t[n]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"post":(async(t,n,c)=>{try{switch(t[n]){case"account":(async(t,e,a)=>{try{o(t)}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;default:s(`new type [(${e})${t[n]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"get":(async(t,n,c)=>{try{switch(t[n]){case"auctions":case"winner":case"timer":(async(t,e,a)=>{try{t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let e=await server(null,t.path,conf.account.web,"GET");o(e)}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"nft":(async(t,e,a)=>{try{t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let e=await server(t.data,t.path,conf.account.web,"POST");o(e)}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;default:s(`new type [(${e})${t[n]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"update":(async(t,a,n)=>{try{switch(t[a]){case"account":t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let n=await server(t.data,t.path,conf.account.web,"PUT");o(n);break;default:s(`new type [(${e})${t[a]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"checked":(async(t,a,n)=>{try{switch(t[a]){case"account":t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let n=await server(t.data,t.path,conf.account.web,"POST");o(n);break;default:s(`new type [(${e})${t[a]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;case"delete":(async(t,n,c)=>{try{switch(t[n]){case"item":t.path||console.assert(!1,'Должно быть свойтсво obj["path""]');let c=await server(null,t.path,conf.account.web,"DELETE");o(c);break;case"winner":(async(t,e,a)=>{try{t.path||console.assert(!1,'Должно бытьсвойтсво obj["path""]');let e=await server(null,t.path,conf.account.web,"DELETE");o(e)}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;default:s(`new type [(${e})${t[n]}]`)}}catch(t){s(t)}})(t,a[0],a[1],a[2],a[3]);break;default:s(`new function ${e}`)}});