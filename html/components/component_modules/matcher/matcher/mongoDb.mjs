import mongodb from"/static/html/components/component_modules/matcher/matcher/this/database/mongoDb/mongodb.mjs";export default(e,t,...a)=>new Promise(function(d,o){let i=e=>{d(e)},n=e=>{console.log("~~~ err router ~~~",e),o(e)};switch(t){case"create":(async(e,t,a)=>{try{switch(e[t]){case"channel":i(mongodb.create({feed:e.data,id:"news",object:"feed"},"channel"));break;case"bidChanel":i(mongodb.create({feed:e.data,id:"news",object:"bid"},"bidChanel"));break;case"item":i(mongodb.create({item:e.data,id:e.id,object:"item"},"item"));break;case"bid":i(mongodb.create({item:e.data,id:e.id,object:"item"},"itemBid"));break;case"auth":i(mongodb.create({data:{id:"auth",auth:e.data,object:"waves"}},"auth"));break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;case"get":(async(e,t,a)=>{try{switch(e[t]){case"jsonPhoto":i(mongodb.get({input:"mongodb",type:"jsonPhoto"},"type"));break;case"feeds":i(mongodb.get({input:"mongodb",type:"feeds"},"type"));break;case"bids":i(mongodb.get({input:"mongodb",type:"bids"},"type"));break;case"itemsBid":i(mongodb.get({input:"mongodb",type:"itemsBid"},"type"));break;case"bidItem":i(mongodb.get({input:"mongodb",type:"bidItem",id:e.date},"type"));break;case"items":i(mongodb.get({input:"mongodb",type:"items"},"type"));break;case"item":i(mongodb.get({input:"mongodb",type:"item",data:{id:e.id}},"type"));break;case"img":i(mongodb.get({input:"mongodb",type:"img",data:e.data},"type"));break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;case"set":(async(e,t,a)=>{try{switch(e[t]){case"item":i(mongodb.set({input:"mongodb",type:"item",data:{feed:e.data,id:"news",object:"feed"}},"type"));break;case"auth":i(mongodb.set({input:"mongodb",type:"auth",data:{auth:e.data,id:"waves",object:"auth"}},"type"));break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;case"update":(async(e,t,a)=>{try{switch(e[t]){case"feed":let a=await mongodb.set({input:"mongodb",type:"feed",id:e.id,data:{feed:e.data,id:"news",object:"feed"}},"type");i(a);break;case"bid":let d=await mongodb.set({input:"mongodb",type:"bid",id:e.id,data:{feed:e.data,id:"bid",object:"feed"}},"type");i(d);break;case"item":let o=await mongodb.update({input:"mongodb",type:"item",data:{item:e.data,id:e.id,object:"item"}},"type");i(o);break;case"itemBid":let n=await mongodb.update({input:"mongodb",type:"itemBid",data:{item:e.data,id:e.id,object:"item"}},"type");i(n);break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;case"delete":(async(e,t,a)=>{try{switch(e[t]){case"item":await mongodb.delete({input:"mongodb",type:"item",id:e.id},"type"),i({delete:"ok"});break;case"itemBid":await mongodb.delete({input:"mongodb",type:"itemBid",id:e.id},"type"),i({delete:"ok"});break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;case"post":(async(e,t,a)=>{try{switch(e[t]){case"form":console.assert(!1);break;default:console.warn("необрабатываемый тип запроса",e[t])}}catch(e){n(e)}})(e,a[0],a[1],a[2],a[3]);break;default:n(`новая функция ${t}`)}});