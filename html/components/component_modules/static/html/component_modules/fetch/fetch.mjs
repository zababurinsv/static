export default(t,e,...n)=>new Promise(function(o,s){let a=t=>{console.log("~~~ out  ~~~"),o(t)},c=t=>{console.log("~~~ err  ~~~",t),s(t)};switch(e){case"get":(async(t,o,s)=>{try{switch(console.log(`app(${e}[(${t.input})${t[o]}]property)`),t[o]){case"auth":(async(t,e,n)=>{try{console.assert(!1,t),fetch("https://waves.zababurinsv.now.sh/verify",{method:"POST",headers:{"Content-Type":"application/json",mode:"no-cors"},body:JSON.stringify({auth:t,id:"waves",object:"auth"})}).then(function(t){if(t.ok)return t.json();throw new Error("HTTP error, status = "+t.status)}).then(function(t){!0===t?a(t):(document.body.innerHTML="",document.body.insertAdjacentHTML("afterbegin",`${t}`),a(!1))}).catch(function(t){console.assert(!1,"auth",t)})}catch(t){c(t)}})(t,n[0],n[1],n[2],n[3]);break;default:c(`new type [(${e})${t[o]}]`)}}catch(t){c(t)}})(t,n[0],n[1],n[2],n[3]);break;default:c(`new function ${e}`)}});