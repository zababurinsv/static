import matcher from"/static/html/components/component_modules/matcher/matcher.mjs";import colorLog from"/static/html/components/component_modules/colorLog/colorLog.mjs";import isEmpty from"/static/html/components/component_modules/isEmpty/isEmpty.mjs";let upload={};async function init(e){function t(e){e.preventDefault(),e.stopPropagation()}function o(e){upload.dropArea.classList.add("highlight")}function r(e){upload.dropArea.classList.remove("active")}return e.this.querySelector("#drop-area")?upload.dropArea=e.this.querySelector("#drop-area"):e.this.shadowRoot.querySelector("#drop-area")?upload.dropArea=e.this.shadowRoot.querySelector("#drop-area"):console.assert(!1,"нет элемента #drop-area",e.this),e.this.querySelector("progress")?upload.progress=e.this.querySelector("progress"):e.this.shadowRoot.querySelector("progress")?upload.progress=e.this.shadowRoot.querySelector("progress"):console.assert(!1,"нет элемента #progress",e.this),e.this.querySelector("#fileElem")?upload.handleFiles=e.this.querySelector("#fileElem"):e.this.shadowRoot.querySelector("#fileElem")?upload.handleFiles=e.this.shadowRoot.querySelector("#fileElem"):console.assert(!1,"нет элемента .upload",e.this),["dragenter","dragover","dragleave","drop"].forEach(e=>{upload.dropArea.addEventListener(e,t,!1),upload.dropArea.addEventListener(e,t,!1)}),["dragenter","dragover"].forEach(e=>{upload.dropArea.addEventListener(e,o,!1)}),["dragleave","drop"].forEach(e=>{upload.dropArea.addEventListener(e,r,!1)}),upload.dropArea.addEventListener("drop",function(e){console.log("~~~handleDrop~~~")},!1),upload.staticProperty[`${e.slot}`]=upload,upload.handleFiles.onchange=function(t){!function(e,t){let o={};o=t.this.hasAttribute("parent")?t.this.getAttribute("parent"):t.this.slot;let r=new CustomEvent("uploadEvent",{detail:{obj:o,file:e,from:"varan-upload"}});colorLog("[()]   uploadEvent","blue",r),document.dispatchEvent(r)}(t.target.files[0],e)},e}upload.staticProperty=null,upload.getObject=async function(e){return isEmpty(e)&&((e={}).this=document.body.querySelector("varan-upload")),null===upload.staticProperty?(upload.staticProperty={},await init(e)):void 0===upload.staticProperty[`${e.slot}`]?await init(e):matcher.database.request.functions.getObject(e).then(e=>e.get?(colorLog(`~~~~~~~~a.upload['getObject']  ${e}`,"tomato",e),e):e),e},upload.getObject();export default async(e,t,...o)=>new Promise(function(e,r){let a=t=>{e(t)},s=e=>{console.log("~~~ err ssr ~~~>",e),r(e)};switch(t){case"getObject":(async(e,t,o,r)=>{try{upload.getObject(r),a("test")}catch(e){s(e)}})(0,o[0],o[1],o[2],o[3]);break;case"router":(async(e,t,o)=>{a("test")})(0,o[0],o[1],o[2],o[3]);break;case"pageSsr":(async(e,t,o,r)=>{try{a("test")}catch(e){s(e)}})(0,o[0],o[1],o[2],o[3]);break;default:s(`новая функция ${t}`)}});