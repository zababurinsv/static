export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let template=config.babel.transform("        \n         let React =   config['React']\n         let connect =   config['connect']\n         let Moment =   config['Moment']\n         let PropTypes = config['PropTypes']\n         let Component = config['Component']\n         let deleteExperience = config['actions']['profileActions']['deleteExperience']\n              \n        class Experience extends Component {\n          onDeleteClick(id) {\n            this.props.deleteExperience(id);\n          }\n        \n          render() {\n            const experience = this.props.experience.map(exp => (\n              <tr key={exp._id}>\n                <td>{exp.company}</td>\n                <td>{exp.title}</td>\n                <td>\n                  <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -\n                  {exp.to === null ? (\n                    ' Now'\n                  ) : (\n                    <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n                  )}\n                </td>\n                <td>\n                  <button\n                    onClick={this.onDeleteClick.bind(this, exp._id)}\n                    className=\"btn btn-danger\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ));\n            return (\n              <div>\n                <h4 className=\"mb-4\">Experience Credentials</h4>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>Company</th>\n                      <th>Title</th>\n                      <th>Years</th>\n                      <th />\n                    </tr>\n                    {experience}\n                  </thead>\n                </table>\n              </div>\n            );\n          }\n        }\n  \n        Experience.propTypes = {\n          deleteExperience: PropTypes.func.isRequired\n        };\n\n        resolve(connect(null, { deleteExperience })(Experience))\n            ",config.babel.availablePresets.react);eval(template.code)})});