import componentCommentForm from"./CommentForm.mjs";import componentCommentFeed from"./CommentFeed.mjs";import componenPostItem from"../posts/PostItem.mjs";import componentSpinner from"../common/Spinner.mjs";export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let CommentForm=await componentCommentForm("CommentForm"),CommentFeed=await componentCommentFeed("CommentFeed"),PostItem=await componenPostItem("PostItem"),Spinner=await componentSpinner("Spinner"),template=config.babel.transform("        \n      let React =   config['React']\n      let Component = config['Component']\n      let connect =   config['connect']\n      let PropTypes = config['PropTypes']\n      let Link = config['Link']\n      \n      let getPost = config['actions']['postActions']['getPost']\n    \n                  \n      class Post extends Component {\n        componentDidMount() {\n          this.props.getPost(this.props.match.params.id);\n        }\n      \n        render() {\n          const { post, loading } = this.props.post;\n          let postContent;\n      \n          if (post === null || loading || Object.keys(post).length === 0) {\n            postContent = <Spinner />;\n          } else {\n            postContent = (\n              <div>\n                <PostItem post={post} showActions={false} />\n                <CommentForm postId={post._id} />\n                <CommentFeed postId={post._id} comments={post.comments} />\n              </div>\n            );\n          }\n      \n          return (\n            <div className=\"post\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n                      Back To Feed\n                    </Link>\n                    {postContent}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n      \n      Post.propTypes = {\n        getPost: PropTypes.func.isRequired,\n        post: PropTypes.object.isRequired\n      };\n      \n      const mapStateToProps = state => ({\n        post: state.post\n      });\n\n    \n      resolve(connect(mapStateToProps, { getPost })(Post))\n      \n            ",config.babel.availablePresets.react);eval(template.code)})});