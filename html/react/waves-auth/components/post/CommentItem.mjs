export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let template=config.babel.transform('        \n      let React =   config[\'React\']\n      let Component = config[\'Component\']\n      let connect =   config[\'connect\']\n      let PropTypes = config[\'PropTypes\']\n      let deleteComment = config[\'actions\'][\'postActions\'][\'deleteComment\']\n    \n                    \n      class CommentItem extends Component {\n        onDeleteClick(postId, commentId) {\n          this.props.deleteComment(postId, commentId);\n        }\n      \n        render() {\n          const { comment, postId, auth } = this.props;\n      \n          return (\n            <div className="card card-body mb-3">\n              <div className="row">\n                <div className="col-md-2">\n                  <a href="profile.html">\n                    <img\n                      className="rounded-circle d-none d-md-block"\n                      src={comment.avatar}\n                      alt=""\n                    />\n                  </a>\n                  <br />\n                  <p className="text-center">{comment.name}</p>\n                </div>\n                <div className="col-md-10">\n                  <p className="lead">{comment.text}</p>\n                  {comment.user === auth.user.id ? (\n                    <button\n                      onClick={this.onDeleteClick.bind(this, postId, comment._id)}\n                      type="button"\n                      className="btn btn-danger mr-1"\n                    >\n                      <i className="fas fa-times" />\n                    </button>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n      \n      CommentItem.propTypes = {\n        deleteComment: PropTypes.func.isRequired,\n        comment: PropTypes.object.isRequired,\n        postId: PropTypes.string.isRequired,\n        auth: PropTypes.object.isRequired\n      };\n      \n      const mapStateToProps = state => ({\n        auth: state.auth\n      });\n\n\n    \n      resolve(connect(mapStateToProps, { deleteComment })(CommentItem))\n      \n            ',config.babel.availablePresets.react);eval(template.code)})});