import componentSpinner from"../common/Spinner.mjs";import componentPostForm from"./PostForm.mjs";import componentPostFeed from"./PostFeed.mjs";export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let PostForm=await componentPostForm("PostForm"),PostFeed=await componentPostFeed("PostFeed"),Spinner=await componentSpinner("Spinner"),template=config.babel.transform("        \n      let React =   config['React']\n      let Component = config['Component']\n      let connect =   config['connect']\n      let PropTypes = config['PropTypes']\n      let getPosts = config['actions']['postActions']['getPosts']\n    \n                \n      class Posts extends Component {\n        componentDidMount() {\n          this.props.getPosts();\n        }\n      \n        render() {\n          const { posts, loading } = this.props.post;\n          let postContent;\n      \n          if (posts === null || loading) {\n            postContent = <Spinner />;\n          } else {\n            postContent = <PostFeed posts={posts} />;\n          }\n      \n          return (\n            <div className=\"feed\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <PostForm />\n                    {postContent}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n      \n      Posts.propTypes = {\n        getPosts: PropTypes.func.isRequired,\n        post: PropTypes.object.isRequired\n      };\n      \n      const mapStateToProps = state => ({\n        post: state.post\n      });\n    \n    \n      resolve(connect(mapStateToProps, { getPosts })(Posts))\n      \n            ",config.babel.availablePresets.react);eval(template.code)})});