export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let post={},template=config.babel.transform(`        \n      let React =   config['React']\n      let Component = config['Component']\n      let connect =   config['connect']\n      let PropTypes = config['PropTypes']\n      let classnames = config['classnames']\n      let Link = config['Link']    \n      let deletePost = config['actions']['postActions']['deletePost']\n      let addLike = config['actions']['postActions']['addLike']\n      let removeLike = config['actions']['postActions']['removeLike']\n           \n        class PostItem extends Component {\n          onDeleteClick(id) {\n            this.props.deletePost(id);\n          }\n        \n          onLikeClick(id) {\n            this.props.addLike(id);\n          }\n        \n          onUnlikeClick(id) {\n            this.props.removeLike(id);\n          }\n        \n          findUserLike(likes) {\n            const { auth } = this.props;\n            if (likes.filter(like => like.user === auth.user.id).length > 0) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        \n          render() {\n            const { post, auth, showActions } = this.props;\n        \n            return (\n              <div className="card card-body mb-3">\n                <div className="row">\n                  <div className="col-md-2">\n                    <a href="profile.html">\n                      <img\n                        className="rounded-circle d-none d-md-block"\n                        src={post.avatar}\n                        alt=""\n                      />\n                    </a>\n                    <br />\n                    <p className="text-center">{post.name}</p>\n                  </div>\n                  <div className="col-md-10">\n                    <p className="lead">{post.text}</p>\n                    {showActions ? (\n                      <span>\n                        <button\n                          onClick={this.onLikeClick.bind(this, post._id)}\n                          type="button"\n                          className="btn btn-light mr-1"\n                        >\n                          <i\n                            className={classnames('fas fa-thumbs-up', {\n                              'text-info': this.findUserLike(post.likes)\n                            })}\n                          />\n                          <span className="badge badge-light">{post.likes.length}</span>\n                        </button>\n                        <button\n                          onClick={this.onUnlikeClick.bind(this, post._id)}\n                          type="button"\n                          className="btn btn-light mr-1"\n                        >\n                          <i className="text-secondary fas fa-thumbs-down" />\n                        </button>\n                        <Link to={\`/post/${post._id}\`} className="btn btn-info mr-1">\n                          Comments\n                        </Link>\n                        {post.user === auth.user.id ? (\n                          <button\n                            onClick={this.onDeleteClick.bind(this, post._id)}\n                            type="button"\n                            className="btn btn-danger mr-1"\n                          >\n                            <i className="fas fa-times" />\n                          </button>\n                        ) : null}\n                      </span>\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        }\n        \n        PostItem.defaultProps = {\n          showActions: true\n        };\n        \n        PostItem.propTypes = {\n          deletePost: PropTypes.func.isRequired,\n          addLike: PropTypes.func.isRequired,\n          removeLike: PropTypes.func.isRequired,\n          post: PropTypes.object.isRequired,\n          auth: PropTypes.object.isRequired\n        };\n        \n        const mapStateToProps = state => ({\n          auth: state.auth\n        });\n\n    \n      resolve(connect(mapStateToProps, { deletePost, addLike, removeLike })(PostItem))\n      \n            `,config.babel.availablePresets.react);eval(template.code)})});