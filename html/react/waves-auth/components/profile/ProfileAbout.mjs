export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let template=config.babel.transform('        \n      let React =   config[\'React\']\n      let Component = config[\'Component\']\n      let PropTypes = config[\'PropTypes\']\n      let isEmpty = config[\'isEmpty\']\n   \n          \n      class ProfileAbout extends Component {\n        render() {\n          const { profile } = this.props;\n      \n          // Get first name\n          const firstName = profile.user.name.trim().split(\' \')[0];\n      \n          // Skill List\n          const skills = profile.skills.map((skill, index) => (\n            <div key={index} className="p-3">\n              <i className="fa fa-check" /> {skill}\n            </div>\n          ));\n      \n          return (\n            <div className="row">\n              <div className="col-md-12">\n                <div className="card card-body bg-light mb-3">\n                  <h3 className="text-center text-info">{firstName} is Bio</h3>\n                  <p className="lead">\n                    {isEmpty(profile.bio) ? (\n                      <span>{firstName} does not have a bio</span>\n                    ) : (\n                      <span>{profile.bio}</span>\n                    )}\n                  </p>\n                  <hr />\n                  <h3 className="text-center text-info">Skill Set</h3>\n                  <div className="row">\n                    <div className="d-flex flex-wrap justify-content-center align-items-center">\n                      {skills}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n      \n      ProfileAbout.propTypes = {\n        profile: PropTypes.object.isRequired\n      };\n    \n      resolve(ProfileAbout)\n      \n            ',config.babel.availablePresets.react);eval(template.code)})});