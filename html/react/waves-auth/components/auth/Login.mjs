import componentTextFieldGroup from"../common/TextFieldGroup.mjs";export default obj=>new Promise(async function(resolve,reject){bundle.default(obj,null,async function(error,config){let TextFieldGroup=await componentTextFieldGroup("TextFieldGroup"),template=config.babel.transform("        \n      let React =   config['React']\n      let connect =   config['connect']\n      let PropTypes = config['PropTypes']\n      let Component = config['Component']\n      let loginUser = config['actions']['authActions']['loginUser']\n       let store = config['store']\n           \n        class Login extends Component {\n          constructor() {\n            super();\n            this.onSubmit = this.onSubmit.bind(this);\n            this.onChange = this.onChange.bind(this);\n            this.state = {\n              email: '',\n              password: '',\n              errors: {}\n            };\n          }\n        \n          componentDidMount() {\n            if (this.props.auth.isAuthenticated) {\n              this.props.history.push('/dashboard');\n            }\n          }\n        \n          componentWillReceiveProps(nextProps) {\n            if (nextProps.auth.isAuthenticated) {\n              this.props.history.push('/dashboard');\n            }\n        \n            if (nextProps.errors) {\n              this.setState({ errors: nextProps.errors });\n            }\n          }\n          onSubmit(e){\n            e.preventDefault();\n            console.log('!!!!!!!!!!!!!!!!!!!!!!!eee!!!!!', this)\n            const userData = {\n              email: this.state.email,\n              password: this.state.password\n            };\n        \n            this.props.loginUser(userData);\n          }\n        \n          onChange(e){\n          console.log('!!!!!!!!!!!!!!!!!!!!!!!eee!!!!!', this)\n            this.setState({ [e.target.name]: e.target.value });\n          }\n          render() {\n            const { errors } = this.state\n        \n            return (\n              <div className=\"login\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                      <h1 className=\"display-4 text-center\">Log In</h1>\n                      <p className=\"lead text-center\">\n                        Sign in to your account\n                      </p>\n                      <form onSubmit={this.onSubmit}>\n                        <TextFieldGroup\n                          placeholder=\"Email Address\"\n                          name=\"email\"\n                          type=\"email\"\n                          value={this.state.email}\n                          onChange={this.onChange}\n                          error={errors.email}\n                        />\n        \n                        <TextFieldGroup\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          type=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                          error={errors.password}\n                        />\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        }\n\n      Login.propTypes = {\n        loginUser: PropTypes.func.isRequired,\n        auth: PropTypes.object.isRequired,\n        errors: PropTypes.object.isRequired\n      };\n\n       let mapStateToProps = (state) => ({\n \n        auth: state.auth,\n        errors: state.errors\n      });\n      resolve(connect(mapStateToProps, { loginUser })(Login))\n            ",config.babel.availablePresets.react);eval(template.code)})});