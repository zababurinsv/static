export default obj=>new Promise(function(resolve,reject){bundle.default(obj,null,async function(error,config){let template=config.babel.transform("\n            let React =   config['React']\n            let PropTypes = config['PropTypes']\n            let classnames = config['classnames']\n            const InputGroup = ({\n              name,\n              placeholder,\n              value,\n              error,\n              icon,\n              type,\n              onChange\n            }) => {\n              return (\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">\n                      <i className={icon} />\n                    </span>\n                  </div>\n                  <input\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': error\n                    })}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                  />\n                  {error && <div className=\"invalid-feedback\">{error}</div>}\n                </div>\n              );\n            };\n            \n            InputGroup.propTypes = {\n              name: PropTypes.string.isRequired,\n              placeholder: PropTypes.string,\n              value: PropTypes.string.isRequired,\n              icon: PropTypes.string,\n              error: PropTypes.string,\n              type: PropTypes.string.isRequired,\n              onChange: PropTypes.func.isRequired\n            };\n            \n            InputGroup.defaultProps = {\n              type: 'text'\n            };\n\n                     resolve(InputGroup)\n            ",config.babel.availablePresets.react);eval(template.code)})});