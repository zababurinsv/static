export default obj=>new Promise(function(resolve,reject){bundle.default(obj,null,async function(error,config){let template=config.babel.transform("\n            let React =   config['React']\n            let PropTypes = config['PropTypes']\n            let classnames = config['classnames']\n            const SelectListGroup = ({ name, value, error, info, onChange, options }) => {\n              const selectOptions = options.map(option => (\n                <option key={option.label} value={option.value}>\n                  {option.label}\n                </option>\n              ));\n              return (\n                <div className=\"form-group\">\n                  <select\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': error\n                    })}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                  >\n                    {selectOptions}\n                  </select>\n                  {info && <small className=\"form-text text-muted\">{info}</small>}\n                  {error && <div className=\"invalid-feedback\">{error}</div>}\n                </div>\n              );\n            };\n            \n            SelectListGroup.propTypes = {\n              name: PropTypes.string.isRequired,\n              value: PropTypes.string.isRequired,\n              info: PropTypes.string,\n              error: PropTypes.string,\n              onChange: PropTypes.func.isRequired,\n              options: PropTypes.array.isRequired\n            };\n\n                     resolve(SelectListGroup)\n            ",config.babel.availablePresets.react);eval(template.code)})});